{
    "map": {
        "items": "items",
        "games": "games"
    },
    "filename": "packages/deployer/copy-contracts.js"
}
---
const fs = require('fs');
const path = require('path');

const POSSIBLE_TARGET_INK_DIRS = [
    "../../target/ink",
    "../../../target/ink",
    "target/ink",
];
const POSSIBLE_CONTRACTS_V1_README_MD_FILES = [
    "../../contracts.v1/README.md",
    "../../../contracts.v1/README.md",
    "contracts.v1/README.md",
]

const realTargetInkIndex = POSSIBLE_TARGET_INK_DIRS.findIndex((dir) => fs.existsSync(dir));
const targetInkDir = POSSIBLE_TARGET_INK_DIRS[realTargetInkIndex];

console.log(`Copying contracts from ${POSSIBLE_TARGET_INK_DIRS[realTargetInkIndex]} ...`);

const realContractsV1ReadmeMdIndex = POSSIBLE_CONTRACTS_V1_README_MD_FILES.findIndex((file) => fs.existsSync(file));
const contractsV1ReadmeMd = POSSIBLE_CONTRACTS_V1_README_MD_FILES[realContractsV1ReadmeMdIndex];
const contractsV1Dir = path.join(path.dirname(contractsV1ReadmeMd), "artifacts");

console.log(`Copying contracts into ${contractsV1Dir} ...`);

if(!fs.existsSync(contractsV1Dir)) {
    fs.mkdirSync(contractsV1Dir, { recursive: true });
}

{{#each items}}
const item{{pascalCase name}}Path = path.join(targetInkDir, '{{kebabCase name}}/{{kebabCase name}}.contract');
{{/each}}
{{#each games}}
const game{{pascalCase name}}Path = path.join(targetInkDir, '{{kebabCase name}}/{{kebabCase name}}.contract');
{{/each}}

{{#each items}}
if(fs.existsSync(item{{pascalCase name}}Path)) {
    console.log(`Copying {{kebabCase name}} ...`);
    fs.copyFileSync(item{{pascalCase name}}Path, path.join(contractsV1Dir, '{{kebabCase name}}.contract.json'));
} else {
    console.log(`{{kebabCase name}} not found`);
}
{{/each}}

{{#each games}}
if(fs.existsSync(game{{pascalCase name}}Path)) {
    console.log(`Copying {{kebabCase name}} ...`);
    fs.copyFileSync(game{{pascalCase name}}Path, path.join(contractsV1Dir, '{{kebabCase name}}.contract.json'));
} else {
    console.log(`{{kebabCase name}} not found`);
}
{{/each}}
